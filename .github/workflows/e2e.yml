
name: E2E

on:
  repository_dispatch:
    types: [e2e]

jobs:
  test:
    name: Test
    timeout-minutes: 20

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]
        minikube_driver:
          - docker
        kubernetes_version:
          - 1.16.13
    env:
      KUBERNETES_VERSION: ${{ matrix.kubernetes_version }}
      DOCKER_REGISTRY_USERNAME: percona-robot
      DOCKER_REGISTRY_PASSWORD: ${{ secrets.ROBOT_TOKEN }}
      OKTA_TOKEN: ${{ secrets.OKTA_TOKEN }}
      SAAS_UI_TAG: ${{ github.event.client_payload.tag }}

      MINIKUBE_DRIVER: ${{ matrix.minikube_driver }}
      CHANGE_MINIKUBE_NONE_USER: true
      MINIKUBE_IN_STYLE: 1

    steps:
      - name: Checkout infra
        uses: percona-platform/checkout@v2
        with:
          repository: percona-platform/infra
          token: ${{ secrets.ROBOT_TOKEN }}
          path: main

      - name: Install packages
        run: |
          sudo add-apt-repository ppa:dysfunctionalprogramming/minisign
          sudo apt update
          sudo apt install -y conntrack libnss3-tools minisign
          curl -sSL https://github.com/FiloSottile/mkcert/releases/download/v1.4.1/mkcert-v1.4.1-linux-amd64 > mkcert
          chmod +x mkcert
          sudo mv mkcert /usr/local/bin/
      # https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners#supported-runners-and-hardware-resources
      # https://minikube.sigs.k8s.io/docs/drivers/docker/
      - name: Configure minikube
        run: |
          minikube config set cpus 2
          minikube config set memory 4096
      - name: Start environment
        run: make -C k8s/platform-saas/local env-up-start

      - name: Gen keys
        run: env MINISIGN=minisign make -C k8s/platform-saas/local keys

      - name: Create secrets
        run: make -C k8s/platform-saas/local env-secrets

      - name: Pre-pull images
        run: make -C k8s/platform-saas/local pre-pull

      - name: Prepare environment
        run: make -C k8s/platform-saas/local env-prepare

      - name: Apply
        run: make -C k8s/platform-saas/local apply

      - name: Wait
        run: make -C k8s/platform-saas/local env-up-wait

      - name: Start tunnel in the background
        run: make -C k8s/platform-saas/local tunnel-background

      - name: Checkout E2E code
        uses: percona-platform/checkout@v2

      # use full version while v2 is in beta
      - name: Install Node.js ${{ matrix.node-version }}
        uses: percona-platform/setup-node@v2.1.2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Execute tests
        uses: percona-platform/github-action@v2
        with:
          working-directory: packages/platform-ui
          browser: chrome
          command: yarn cy:run
          wait-on: 'https://platform.localhost'
          wait-on-timeout: 120

      - name: Setup tmate session on failure
        if: ${{ failure() }}
        uses: percona-platform/action-tmate@v2

      - name: Generating the report
        if: ${{ always() }}
        working-directory: packages/platform-ui
        run: yarn generate:report

      - name: Attaching the report
        if: ${{ always() }}
        uses: percona-platform/upload-artifact@v2
        with:
          name: ui-tests-report
          path: packages/platform-ui/cypress/reports

      - name: Collect debugdata
        if: ${{ always() }}
        run: make -C k8s/platform-saas/local collect-debugdata

      - name: Upload debugdata
        if: ${{ always() }}
        uses: percona-platform/upload-artifact@v2
        with:
          name: debugdata
          path: ./k8s/platform-saas/local/debugdata
