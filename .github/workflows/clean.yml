---
name: Cleanup
on:
  schedule:
    # run every Saturday
    - cron: "0 12 * * 6"

jobs:
  clean:
    name: Clean stale packages and caches
    timeout-minutes: 10

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - name: Checkout code
        uses: percona-platform/checkout@v2.3.2

      - name: Install Node.js ${{ matrix.node-version }}
        uses: percona-platform/setup-node@v2.1.1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Enable node_modules cache
        uses: percona-platform/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-

      - name: Install tools
        run: make init

      - name: Clean node_modules cache
        run: |
          rm -fr node_modules/*
          git status
          git clean -xdn

      - name: Setup environment variables
        run: |
          echo ::set-env name=REPOSITORY_NAME::$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//")
          echo ::set-env name=REPOSITORY_OWNER::${{ github.repository_owner }}

      - name: Collect stale package versions
        id: collect
        env:
          ROBOT_TOKEN: ${{ secrets.ROBOT_TOKEN }}
        run: |
          versions=$(bin/get-stale-packages)
          length=$(echo $versions | wc -w)
          echo ::set-output name=stale_versions::${versions}
          echo ::set-output name=length::${length}

      - name: Clean stale packages
        if: steps.collect.outputs.length > 0
        uses: percona-platform/delete-package-versions@v1.0.3
        with:
          package-version-ids: ${{ steps.collect.outputs.stale_versions }}
